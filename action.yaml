name: 'jprm-build'
description: 'Builds a Jellyfin plugin via Jellyfin Plugin Repository Manager'
author: 'Odd Stråbø'

branding:
  icon: package
  color: purple

inputs:
  path:
    required: false
    default: '.'
    description: 'The path to the sources of the plugin solution (default: ".")'
  output:
    required: false
    default: './artifacts'
    description: 'Path to dotnet build directory (default: ./artifacts)'
  version:
    required: false
    default: ''
    description: 'Overwrite the detected version of the plugin (default: "")'
  dotnet-config:
    required: false
    default: 'Release'
    description: 'The dotnet build configuration (default: Release)'
  dotnet-target:
    required: false
    default: ''
    description: 'Overwrite the detected dotnet target framework used for the plugin build (default: "")'
  publish-extra-args:
    required: false
    default: '/maxcpucount:1'
    description: 'Extra arguments to pass to dotnet publish (default: "")'
  verbosity:
    required: false
    default: 'debug'
    description: 'The log verbosity of JPRM'

outputs:
  artifact:
    description: 'Returns the built plugin zip'
    value: ${{ steps.build.outputs.artifact }}

runs:
  using: composite
  steps:
    - name: Ensure ouput dir exists
      shell: bash
      run: |-
        echo "::group::Preparing Environment"
        mkdir -p ${{ inputs.output }}

    - name: Setup JRPM Deps
      shell: bash
      run: |-
        python3 -m pip install -r ${{ github.action_path }}/requirements.txt
        echo "::endgroup::"

    - id: build
      name: Run JPRM build
      shell: bash
      run: |-
        echo "::group::Building and Packaging"
        
        if [[ -n "${{ inputs.dotnet-target }}" ]]; then
          DOTNET_FRAMEWORK="--dotnet-framework ${{ inputs.dotnet-target }}"
        else
          DOTNET_FRAMEWORD=""
        fi
        
        if [[ -n "${{ inputs.version }}" ]]; then
          PLUGIN_VERSION="-v ${{ inputs.version }}"
        else
          PLUGIN_VERSION=""
        fi
        
        if [[ -n "${{ inputs.publish-extra-args }}" ]]; then
          PUBLISH_EXTRA_ARGS="--publish-extra-args ${{ inputs.publish-extra-args }}"
        else
          PUBLISH_EXTRA_ARGS=""
        fi
        
        artifact="$(python3 ${{ github.action_path }}/jprm/__init__.py --verbosity=${{ inputs.verbosity }} plugin build ${{ inputs.path }} -o ${{ inputs.output }} ${PLUGIN_VERSION} --dotnet-configuration ${{ inputs.dotnet-config }} ${PUBLISH_EXTRA_ARGS} ${DOTNET_FRAMEWORK})"
        
        echo "Artifact: ${artifact}"
        echo "artifact=${artifact}" >> $GITHUB_OUTPUT
        echo "::endgroup::"
